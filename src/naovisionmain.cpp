/**
 * \mainpage
 * \section Author
 * @author ehtd
 *
 * \section Copyright
 * Version : $Id$
 *
 * \section Description
 *
 * This file was generated by Aldebaran Robotics ModuleGenerator
 */

#include <signal.h>
#include <alptr.h>
#include <albroker.h>
#include <almodule.h>
#include <albrokermanager.h>
#include <altoolsmain.h>

#include "vision1.h"



#ifdef NAOVISION_IS_REMOTE_OFF

#ifdef _WIN32
    #define ALCALL __declspec(dllexport)
#else
    #define ALCALL
#endif
#endif

#ifdef __cplusplus
extern "C"
{
#endif


ALCALL int _createModule( AL::ALPtr<AL::ALBroker> pBroker )
{      
  // init broker with the main broker inctance 
  // from the parent executable
  AL::ALBrokerManager::setInstance(pBroker->fBrokerManager.lock());
  AL::ALBrokerManager::getInstance()->addBroker(pBroker);

    
  AL::ALModule::createModule<vision1>( pBroker, "vision1" );


  return 0;
}

ALCALL int _closeModule(  )
{
  return 0;
}

# ifdef __cplusplus
}
# endif

#ifdef NAOVISION_IS_REMOTE_ON

int main( int argc, char *argv[] )
{
  // pointer to createModule
  TMainType sig;
  sig = &_createModule;

  // call main
  ALTools::mainFunction("NaoVision",argc, argv,sig);
}
#endif

